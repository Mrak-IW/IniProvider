//////////////////////////////////////////////////////////////////////////////////////////////////
///@file IniProvider.h
///@author Маслов Денис 
///\brief Модуль, обеспечивающий разбор ini-файла на пары "ключ = значение"
///
/// Модуль использует контейнер std::map<string, string> для хранения ключей и значений из ini-файла
/// в текстовом виде. Рекомендуется использовать этот класс, как предка для класса, который будет
/// разбирать текстовые представления значений по полям нужных типов
/// 
//////////////////////////////////////////////////////////////////////////////////////////////////
#pragma once
#include <string>
#include <map>
using namespace std;

/// Класс, позволяющий вычитывать и хранить в текстовом виде настройки из конфигурационного файла/потока ввода.
/// Стоит отметить, что после загрузки настроек из файла они хранятся автономно в памяти 
/// и не требуется держать поток открытым, если нет нужды подгрузить настройки повторно.
class IniProvider : public map<string, string>
{
private:
	/// Указатель на поток ввода, из которого будут считаны настройки
	istream *iniFile;
public:
	// Да, XML-комменты от VisualStudio DoxyGen тоже жрёт
	/// <summary> Создать объект настроек на основании файла настроек </summary>
	/// <param name="iniFile"> Поток ввода - файл настроек. Передаётся по ссылке. </param>
	IniProvider(istream &iniFile);
	~IniProvider();

	/// Подгрузить настройки из файла
	void LoadData();

	/// <summary>
	/// Проверить наличие конкретной настройки в файле
	/// </summary>
	/// <param name="key">Имя настройки</param>
	/// <returns>TRUE, если настройка в файле есть</returns>
	bool ContainsKey(string key);
};

